{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","props","handleKeyUp","event","setState","key","state","textInfo","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MA6CeA,E,kDArCb,WAAYC,GAAY,IAAD,8BACrB,cAAMA,IAiBRC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEC,IAAKF,EAAME,OAhB3B,EAAKC,MAAQ,CACXC,SAAU,0BACVF,IAAK,2BALc,E,qDASvB,WACEG,SAASC,iBAAiB,QAASC,KAAKR,e,kCAG1C,WACEM,SAASG,oBAAoB,QAASD,KAAKR,e,oBAQ7C,WACE,MAA0BQ,KAAKJ,MAAvBC,EAAR,EAAQA,SAAUF,EAAlB,EAAkBA,IAElB,OACE,qBAAKO,UAAU,MAAf,SACGP,IAAQE,EACP,mBAAGK,UAAU,eAAb,SAA6BP,IAE7B,mBAAGO,UAAU,eAAb,4CAAyDP,EAAzD,a,GA/BQQ,a,MCFlBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.fa642349.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface AppState {\n  textInfo: string;\n  key: string;\n}\n\nclass App extends Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n    // eslint-disable-next-line react/state-in-constructor\n    this.state = {\n      textInfo: 'Nothing was pressed yet',\n      key: 'Nothing was pressed yet',\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleKeyUp = (event: { key: any; }) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    const { textInfo, key } = this.state;\n\n    return (\n      <div className=\"App\">\n        {key === textInfo ? (\n          <p className=\"App__message\">{key}</p>\n        ) : (\n          <p className=\"App__message\">{`The last pressed key is [${key}]`}</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}